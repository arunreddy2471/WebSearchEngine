https://www.geeksforgeeks.org/maximum-possible-difference-between-two-subarrays-after-removing-n-elements-from-array/ Maximum possible difference between two Subarrays after removing N elements from Array - GeeksforGeeks Skip to content Courses For Working Professionals LIVE DSA Live Classes System Design Java Backend Development Full Stack LIVE Explore More Self-Paced DSA- Self Paced SDE Theory All Development Courses Explore More For Students LIVE Competitive Programming GATE Live Course 2023 Data Science Explore More Self-Paced DSA- Self Paced CIP JAVA / Python / C++ Explore More School Courses School Guide Python Programming Learn To Make Apps Explore more All Courses Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does 'Space Complexity' mean ? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Bitwise Algorithms Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competititve Programming Design Patterns System Design Tutorial Multiple Choice Quizzes Languages C C++ Java Python C# JavaScript jQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin ML & Data Science Machine Learning Data Science CS Subjects Mathematics Operating System DBMS Computer Networks Computer Organization and Architecture Theory of Computation Compiler Design Digital Logic Software Engineering GATE GATE Computer Science Notes Last Minute Notes GATE CS Solved Papers GATE CS Original Papers and Official Keys GATE 2021 Dates GATE CS 2021 Syllabus Important Topics for GATE CS Web Technologies HTML CSS JavaScript AngularJS ReactJS NodeJS Bootstrap jQuery PHP Software Designs Software Design Patterns System Design Tutorial School Learning School Programming Mathematics Number System Algebra Trigonometry Statistics Probability Geometry Mensuration Calculus Maths Notes (Class 8-12) Class 8 Notes Class 9 Notes Class 10 Notes Class 11 Notes Class 12 Notes NCERT Solutions Class 8 Maths Solution Class 9 Maths Solution Class 10 Maths Solution Class 11 Maths Solution Class 12 Maths Solution RD Sharma Solutions Class 8 Maths Solution Class 9 Maths Solution Class 10 Maths Solution Class 11 Maths Solution Class 12 Maths Solution Physics Notes (Class 8-11) Class 8 Notes Class 9 Notes Class 10 Notes Class 11 Notes Chemistry Notes Class 8 Notes Class 9 Notes Class 10 Notes CS Exams/PSUs ISRO ISRO CS Original Papers and Official Keys ISRO CS Solved Papers ISRO CS Syllabus for Scientist/Engineer Exam UGC NET UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers Student Campus Ambassador Program School Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competititve Programming Testimonials Student Chapter Geek on the Top Internship Careers Jobs Apply for Jobs Post a Job Hire with Us Know about Jobathon Jobathon Practice All DSA Problems Problem of the Day Interview Series: Weekly Contests Bi-Wizard Coding: School Contests Contests and Events Practice SDE Sheet Curated DSA Lists Top 50 Array Problems Top 50 String Problems Top 50 Tree Problems Top 50 Graph Problems Top 50 DP Problems Write Come write articles for us and get featured Practice Learn and code with the best industry experts Premium Get access to ad-free content, doubt assistance and more! Jobs Come and find your dream job with us Geeks Digest Quizzes Geeks Campus Gblog Articles IDE Campus Mantri Home Saved Videos Courses GBlog Puzzles What's New ? Change Language Array Matrix Strings Hashing Linked List Stack Queue Binary Tree Binary Search Tree Heap Graph Searching Sorting Divide & Conquer Mathematical Geometric Bitwise Greedy Backtracking Branch and Bound Dynamic Programming Pattern Searching Randomized Related Articles ▲ Related Articles Arrays in Java Write a program to reverse an array or string Largest Sum Contiguous Subarray Program for array rotation Arrays in C/C++ Stack Data Structure (Introduction and Program) Top 50 Array Coding Problems for Interviews Maximum and minimum of an array using minimum number of comparisons Linear Search Given an array A[] and a number x, check for pair in A[] with sum as x (aka Two Sum) Multidimensional Arrays in Java K'th Smallest/Largest Element in Unsorted Array | Set 1 Subset Sum Problem | DP-25 Python | Using 2D arrays/lists the right way Find the Missing Number Array of Strings in C++ - 5 Different Ways to Create Queue | Set 1 (Introduction and Array Implementation) Search an element in a sorted and rotated Array Count Inversions in an array | Set 1 (Using Merge Sort) Linked List vs Array Program to find largest element in an array Introduction to Arrays Sort an array of 0s, 1s and 2s | Dutch National Flag problem Write a program to reverse an array or string Merge two sorted arrays Print a given matrix in spiral form Find Second largest element in an array Given an array of size n and a number k, find all elements that appear more than n/k times k largest(or smallest) elements in an array Sliding Window Maximum (Maximum of all subarrays of size k) Arrays in Java Write a program to reverse an array or string Largest Sum Contiguous Subarray Program for array rotation Arrays in C/C++ Stack Data Structure (Introduction and Program) Top 50 Array Coding Problems for Interviews Maximum and minimum of an array using minimum number of comparisons Linear Search Given an array A[] and a number x, check for pair in A[] with sum as x (aka Two Sum) Multidimensional Arrays in Java K'th Smallest/Largest Element in Unsorted Array | Set 1 Subset Sum Problem | DP-25 Python | Using 2D arrays/lists the right way Find the Missing Number Array of Strings in C++ - 5 Different Ways to Create Queue | Set 1 (Introduction and Array Implementation) Search an element in a sorted and rotated Array Count Inversions in an array | Set 1 (Using Merge Sort) Linked List vs Array Program to find largest element in an array Introduction to Arrays Sort an array of 0s, 1s and 2s | Dutch National Flag problem Write a program to reverse an array or string Merge two sorted arrays Print a given matrix in spiral form Find Second largest element in an array Given an array of size n and a number k, find all elements that appear more than n/k times k largest(or smallest) elements in an array Sliding Window Maximum (Maximum of all subarrays of size k) Maximum possible difference between two Subarrays after removing N elements from Array View Discussion Improve Article Save Article Like Article Last Updated : 29 Jul, 2022 Given an array arr[] which is of 3*N size, the task is to remove N elements and divide the whole array into two equal parts such that the difference of the sum of the left subarray and right subarray should yield to maximum. Examples: Input: arr[] = [5, 4, 4, 2, 3, 3] Output: 4 Explanation: The ‘2’ elements to be removed are [4, 3]. and when you divide the array into two equal parts after the removal left subarray= [5, 4], right subarray= [2, 3]. The Sum difference between them is (9-5) = 4 Input: arr[] = [4, 5, 6, 1, 2, 8, 7, 9, 3] Output: 9 Approach: Split the array into two subarrays at some point i (N <= i <= 2 * N). We remove i – N smallest elements from the first subarray, and (2 * N – i) largest elements from the second subarray. That way, for a given split, we get the largest possible sum_first, and smallest possible sum_second. Using Max and Min heap to keep track of the smallest and largest elements, respectively. And update the difference. Follow the below steps to Implement the Idea: Initialize a final_diff variable to store the maximum difference between left and right subarray after removal of N elements. Run a for loop from N to 2*N and arr[] into two halves left and right. Remove i – N smallest elements from left array and 2*N – i largest elements from right array by using Min and Max heap. Calculate the sum of N largest values in left array and N smallest values in right array and find out the difference between them and store it in Curr_diff variable. Maximize the value of final_diff with curr_diff. Return the value of final_diff. Below is the implementation Python3 import copy import heapq from collections import Counter # This function return the (1, n-1) min and max # elements which are t be discarded from the array def best_remove(left, right): temp = [] heapq.heapify(left) heapq.heapify(right) if len(left) == n and len(right) > n: # remove all n elements from the right side temp.extend(heapq.nlargest(n, right)) elif len(right) == n and len(left) > n: # remove all element from the left side temp.extend(heapq.nsmallest(n, left)) else: x = len(left) - n temp.extend(heapq.nsmallest(x, left)+heapq.nlargest(n-x, right)) return temp def remove_elements(parent, child): f_s = Counter(child) # storing all the elements of right # part to preserve the order incase of duplicates r_h = [] for i in parent: if i in f_s and f_s[i] > 0: f_s[i] -= 1 else: r_h.append(i) # print("after r", left + r_h) return r_h # Remove the child from parent # divide the array # sum the left and right elemets # track the curr max sum until the for loops terminates # return the final max diffrence # print(parent, n, child, m) # print(left, right) def max_diff(arr): # function that calculats the sum of maximum diffrence between two arrays # print(arr) mid = len(arr)//2 left = sum(arr[:mid]) right = sum(arr[mid:]) return left-right arr = [7, 9, 5, 8, 1, 3] n = len(arr)//3 final_max = -float("inf") # starting from the index 2 for i in range(n, 2 * n + 1): left = arr[:i] # dividing the left right = arr[i:] # dividing te right sub array # print(left, right) # functions which returns the best elements to be removed from both sub arrays best_remove_elements = best_remove(left, right) # print(best_remove_elements) dup = [] # copying the original array so that the changes might not reflct dup = copy.deepcopy(arr) # function that returns the array after removing the best_remove elements remove_element = remove_elements(dup, best_remove_elements) # print(remove_element) # return(remove_element) curr_max = max_diff(remove_element) # tracking the maximum final_max = max(final_max, curr_max) print("The maximum diffrence between S1 and S2 is", final_max) Output The maximum diffrence between S1 and S2 is 13 Time Complexity: (N*log(N)) Auxiliary Space: O(N) My Personal Notes arrow_drop_up Save Like Previous Count of Pairs with given sum in Rotated Sorted Array Next Count minimum decrement prefix or suffix or increment all operations to make Array equal to 0 Recommended Articles Page : Maximum subarray sum possible after removing at most K array elements 14, Dec 20 Minimize maximum difference between adjacent elements possible by removing a single array element 08, Apr 21 Maximum distinct elements after removing k elements 14, Dec 17 Maximum subarray sum possible after removing at most one subarray 07, May 21 Maximum XOR value of maximum and second maximum element among all possible subarrays 08, Jan 20 Find last two remaining elements after removing median of any 3 consecutive elements repeatedly 09, Jan 20 Queries to find the maximum array element after removing elements from a given range 01, Feb 21 Sort array of strings after sorting each string after removing characters whose frequencies are not a powers of 2 14, Apr 21 Minimize difference between maximum and minimum array elements by removing a K-length subarray 17, Feb 21 Average of remaining elements after removing K largest and K smallest elements from array 17, Dec 18 Minimize difference between maximum and minimum element of all possible subarrays 06, Sep 21 Longest remaining array of distinct elements possible after repeated removal of maximum and minimum elements of triplets 06, Aug 21 Maximize cost to empty an array by removing contiguous subarrays of equal elements 12, Sep 20 Count Non-Repeating array elements after inserting absolute difference between all possible pairs 17, Jan 21 Split array into K subarrays such that sum of maximum of all subarrays is maximized 11, Jun 21 Maximum difference between two elements such that larger element appears after the smaller number 10, Apr 10 Maximize the sum of differences of consecutive elements after removing exactly K elements 02, Jan 20 Minimize the sum of differences of consecutive elements after removing exactly K elements 06, Jan 20 Maximum length of Strictly Increasing Sub-array after removing at most one element 30, Jan 20 Maximum sum of array after removing a positive or negative subarray 16, Jun 21 Reduce array to longest sorted array possible by removing either half of given array in each operation 17, Nov 20 Queries to calculate average of an array after removing K smallest and largest elements with updates 18, Jun 21 Minimum bitwise OR after removing at most K elements from given Array 14, Mar 22 Generate an N-length array having length of non-decreasing subarrays maximized and minimum difference between first and last array elements 23, Jul 21 Article Contributed By : saikumarkudikala @saikumarkudikala Vote for difficulty Easy Normal Medium Hard Expert Article Tags : Arrays loop Arrays Greedy Heap Practice Tags : Arrays Greedy Heap Report Issue Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments What's New Data Structures & Algorithms- Self Paced Course View Details Complete Interview Preparation- Self Paced Course View Details Practice Problems, POTD Streak, Weekly Contests & More! View Details Improve your Coding Skills with PracticeTry It! A-143, 9th Floor, Sovereign Corporate Tower, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org Company About Us Careers In Media Contact Us Privacy Policy Copyright Policy Learn Algorithms Data Structures SDE Cheat Sheet Machine learning CS Subjects Video Tutorials Courses News Top News Technology Work & Career Business Finance Lifestyle Knowledge Languages Python Java CPP Golang C# SQL Kotlin Web Development Web Tutorials Django Tutorial HTML JavaScript Bootstrap ReactJS NodeJS Contribute Write an Article Improve an Article Pick Topics to Write Write Interview Experience Internships Video Internship @geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now! Login Register